name: Push To Yandex Cloud CR

on:
  release:
    types: [created]

  workflow_dispatch:

env:
  APP_IMAGE: cr.yandex/${{ secrets.CR_REGISTRY }}/${{ secrets.CR_REPOSITORY }}:${{ github.sha }}
  CELERY_IMAGE: cr.yandex/${{ secrets.CR_REGISTRY }}/${{ secrets.CR_REPOSITORY }}:${{ github.sha }}celery
  FLOWER_IMAGE: cr.yandex/${{ secrets.CR_REGISTRY }}/${{ secrets.CR_REPOSITORY }}:${{ github.sha }}flower
  NGINX_IMAGE: cr.yandex/${{ secrets.CR_REGISTRY }}/${{ secrets.CR_REPOSITORY }}:${{ github.sha }}nginx
  SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
  SECRET_KEY: ${{ secrets.SECRET_KEY }}
  SMTP_PASS: ${{ secrets.SMTP_PASS }}
  SMTP_USER: ${{ secrets.SMTP_USER }}

jobs:
  build-app:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

#      - name: Create env file
#        run: |
#          touch .env-non-dev
#          echo VITE_OAUTH_CALLBACK="http://team5g.ya-praktikum.tech" >> .env
#          echo VITE_EXPRESS_API="http://team5g.ya-praktikum.tech/api" >> .env
#          cat .env

      - name: Login to Yandex Cloud Container Registry
        id: login-cr
        uses: yc-actions/yc-cr-login@v2
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: Build, tag, and push image to Yandex Cloud Container Registry
        run: |
          docker build -t ${{ env.APP_IMAGE }} .
          docker push ${{ env.APP_IMAGE }}

  build-celery:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Yandex Cloud Container Registry
        id: login-cr
        uses: yc-actions/yc-cr-login@v2
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: Build, tag, and push image to Yandex Cloud Container Registry
        run: |
          docker build -t ${{ env.CELERY_IMAGE }} .
          docker push ${{ env.CELERY_IMAGE }}

  build-flower:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Yandex Cloud Container Registry
        id: login-cr
        uses: yc-actions/yc-cr-login@v2
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: Build, tag, and push image to Yandex Cloud Container Registry
        run: |
          docker build -t ${{ env.FLOWER_IMAGE }} .
          docker push ${{ env.FLOWER_IMAGE }}

#  build-nginx:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#
#      - name: Login to Yandex Cloud Container Registry
#        id: login-cr
#        uses: yc-actions/yc-cr-login@v2
#        with:
#          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
#
#      - name: Build, tag, and push image to Yandex Cloud Container Registry
#        run: |
#          docker build -t ${{ env.NGINX_IMAGE }} ./nginx
#          docker push ${{ env.NGINX_IMAGE }}

  deploy:
    needs: [build-app, build-celery, build-flower]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy COI VM
        id: deploy-coi
        uses: yc-actions/yc-coi-deploy@v2
        env:
          APP_IMAGE: ${{ env.APP_IMAGE }}
          CELERY_IMAGE: ${{ env.CELERY_IMAGE }}
          FLOWER_IMAGE: ${{ env.FLOWER_IMAGE }}
          NGINX_IMAGE: ${{ env.NGINX_IMAGE }}
          NGINX_CERT: ${{ secrets.NGINX_CERT }}
          NGINX_CERT_KEY: ${{ secrets.NGINX_CERT_KEY }}
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          folder-id: ${{ secrets.YC_FOLDER_ID }}
          vm-name: ${{ secrets.YC_VM_NAME }}
          vm-service-account-id: ${{ secrets.YC_SERVICE_ACCOUNT_ID }}
          vm-subnet-id: ${{ secrets.YC_SUBNET_ID }}
          user-data-path: './yandex-cloud/user-data.yaml'
          docker-compose-path: './yandex-cloud/docker-compose.yc.yaml'